#include<iostream>
using namespace std;
void display(int n,int arr[10])
{
	for(int i=0;i<n;i++)
	{
		cout<<arr[i]<<"\t";
	}
}
int binarysearch(int arr[10],int n,int search)
{
	int i;
	for(int i=0;i<n-1;i++)
	{
		for(int j=0;j<n-1;j++)
		{
			if(arr[j]>arr[j+1])
			{
				int temp=arr[j];
				arr[j]=arr[j+1];
				arr[j+1]=temp;
			}
		}
	}
	for(i=0;i<n;i++)
	{
		cout<<arr[i]<<"\t";
	}
	
	int l=1,r=n,mid=-1;
	while(l<=r)
	{
		mid=(l+r)/2;
		if(search==arr[mid])
		{
			return mid;
		}
		else if(search>arr[mid])
		{
			l=mid+1;
		}
		else
		{
			r=mid-1;
		}
}
	return mid;
}
void linearsearch(int arr[10],int n,int search)
{
	int flag=0;
	for(int i=0;i<n;i++)
	{
		if(search==arr[i])
		{
		 flag++;
		}
	}
	if(flag>=1)
	{
		cout<<"element exists in array";
	}
	else
	{
		cout<<"element does not exists in array";
	}
}
int partion(int arr[10],int start,int end)
{
	int i,j=start;
	int pivot=arr[end];
	for(i=start;i<end;i++)
	{
		if(pivot>arr[i])
		{
			swap(arr[i],arr[j]);
			j++;
		}
	}
	swap(arr[j],arr[end]);
	return j;
}
void quicksort(int arr[10],int start,int end)
{
	if(start<end)
	{
		int index=partion(arr,start,end);
		quicksort(arr,start,index-1);
		quicksort(arr,index+1,end);
	}
}
void insertionsort(int n,int arr[10])
{
	int i,j,next;
	for(i=1;i<n;i++)
	{
		next=arr[i];
		j=i-1;
		while(j>=0 && arr[j]>next)
		{
			arr[j+1]=arr[j];
			j--;
		}
		arr[j+1]=next;
	}
}
void selectionsort(int n,int arr[10])
{
	int min,i,j,loc;
	for(i=0;i<n;i++)
	{
		min=arr[i];
		for(j=i+1;j<n;j++)
		{
			if(min>arr[j])
			{
				min=arr[j];
			    loc=j;
			}
        }
        int temp=arr[i];
        arr[i]=arr[loc];
        arr[loc]=temp;
    }
}
void bubblesort(int n,int arr[10])
{
	for(int i=0;i<n-1;i++)
	{
		for(int j=0;j<n-1;j++)
		{
			if(arr[j]>arr[j+1])
			{
				int temp=arr[j];
				arr[j]=arr[j+1];
				arr[j+1]=temp;
			}
		}
	}
}
void sorting()
{
	int opt;
	cout<<"\n1.bubble sort\n";
	cout<<"2.selection sort\n";
	cout<<"3.insertion sort\n";
	cout<<"4.quick sort\n";
	cout<<"5.linear search\n";
	cout<<"6.binary search\n";
	cout<<"0.EXIT";
	do
	{
		cout<<"\nENTER OPTION";
		cin>>opt;
		if(opt==1)
		{
			int i,n;
			cout<<"enter n value";
			cin>>n;
			int arr[n];
			cout<<"enter"<<n<<"value";
			for(i=0;i<n;i++)
			{
				cin>>arr[i];
			}
			bubblesort(n,arr);
			display(n,arr);
		}
		else if(opt==2)
		{
			int i,n;
			cout<<"enter n value";
			cin>>n;
			int arr[n];
			cout<<"enter"<<n<<"value";
			for(i=0;i<n;i++)
			{
				cin>>arr[i];
			}
			selectionsort(n,arr);
			display(n,arr);
		}
		else if(opt==3)
		{
			int i,n;
			cout<<"enter n value";
			cin>>n;
			int arr[n];
			cout<<"enter"<<n<<"value";
			for(i=0;i<n;i++)
			{
				cin>>arr[i];
			}
			insertionsort(n,arr);
			display(n,arr);
		}
		else if(opt==4)
		{
			int i,n;
			cout<<"enter n value";
			cin>>n;
			int arr[n];
			cout<<"enter"<<n<<"value";
			for(i=0;i<n;i++)
			{
				cin>>arr[i];
			}
			quicksort(arr,0,n-1);
			display(n,arr);
		}
		else if(opt==5)
		{
			int i,n,search;
			cout<<"enter n value";
			cin>>n;
			int arr[n];
			cout<<"enter"<<n<<"value";
			for(i=0;i<n;i++)
			{
				cin>>arr[i];
			}
			cout<<"enter sreach element";
			cin>>search;
			linearsearch(arr,n,search);
		}
		else if(opt==6)
		{
			int i,n,search;
			cout<<"enter n value";
			cin>>n;
			int arr[n];
			cout<<"enter"<<n<<"value";
			for(i=0;i<n;i++)
			{
				cin>>arr[i];
			}
			cout<<"enter search element";
			cin>>search;
	     	int bin=binarysearch(arr,n,search);
	     	cout<<bin;
		}
	}
	while(opt!=0);
}
int main()
{
	sorting();
}